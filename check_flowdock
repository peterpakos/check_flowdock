#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Tool to check if Flowdock users exist in LDAP

Copyright (C) 2017 Peter Pakos <peter.pakos@wandisco.com>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""

from __future__ import print_function
import os
import sys
import argparse
from CONFIG import CONFIG
from WDFlowdock import WDFlowdock
from WDLdap import WDLdap


class Main(object):
    VERSION = '1.0.0'

    def __init__(self):
        self._args = self._parse_args()
        self._ldap = WDLdap(CONFIG.IPA_SERVER, CONFIG.BIND_DN, CONFIG.BIND_PW)
        self._flowdock = WDFlowdock(CONFIG.API_KEY)

    def _parse_args(self):
        parser = argparse.ArgumentParser(description='Tool to check if Flowdock users exist in LDAP', add_help=False)
        parser.add_argument('--version', action='version',
                            version='%s %s' % (os.path.basename(sys.argv[0]), self.VERSION))
        parser.add_argument('--help', action='help', help='show this help message and exit')
        return parser.parse_args()

    @staticmethod
    def die(message=None, code=1):
        if message:
            print(message, file=sys.stderr)
        exit(code)

    def run(self):
        print('Flowdock users: %s' % self._flowdock.count_users())

        leavers = []
        for email, data in self._flowdock.get_users().items():
            if not self._ldap.mail_exists(email):
                leavers.append('%s (%s)' % (data.get('name'), email))

        leavers_no = len(leavers)
        s = 's' if leavers_no > 1 else ''
        do = 'do' if leavers_no > 1 else 'does'

        if leavers:
            print('%s user%s %s not exist in LDAP:\n- %s' % (leavers_no, s, do, '\n- '.join(leavers)))
        else:
            print('All users exist in LDAP')


if __name__ == '__main__':
    try:
        Main().run()
    except KeyboardInterrupt:
        print('\nCancelling...')
